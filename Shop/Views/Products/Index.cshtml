@using Shop.Pagination;
@model PaginationList<Shop.Models.Product>
@{
    ViewData["Title"] = "Index";
}
<button onclick="topFunction()" id="scroll-up-button" title="Up"><i class='fas fa-arrow-up'></i></button>
<div class="container-background text-md-center">
    <br /><br />
    <h1><i class="fas fa-pallet"></i> Products</h1>
    <div class="jumbotron text-center">
        <form asp-action="Index" method="get">
            Find by name
            <input type="text" class="form-control col-4 offset-4" name="searchString" value="@ViewData["Filter"]" />
            <button class="btn btn-primary" value="Search"><i class="fas fa-search"></i> Search</button>
        </form>
    </div>
    <p>
        @if (User.IsInRole("Admin"))
        {
            <a class="btn btn-primary" asp-action="Create"><i class="fas fa-plus"></i> Create New</a>
        }
    </p>
    <table class="table text-center">
        <thead>
            <tr>
                <th>
                    Product name
                </th>
                <th>
                   <a asp-action="Index" asp-route-sortOrder="@ViewData["PriceSort"]" asp-route-Filter="@ViewData["Filter"]"><i class="fas fa-dollar-sign"></i> Price</a>
                </th>
                <th>
                    Quantity
                </th>
                <th>
                    Image
                </th>
                <th>
                    Product type
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Price)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Quantity)
                    </td>
                    <td>
                        <img src="~/img/images/@item.ImagePath" class="img-fluid rounded-lg" height="120" width="240" />
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ProductType)
                    </td>
                    <td>
                        <a class="btn btn-secondary" asp-action="Details" asp-route-id="@item.Id"><i class="fas fa-info"></i> Details</a>
                        @if (User.IsInRole("Admin"))
                        {
                            <a class="btn btn-dark" asp-action="Edit" asp-route-id="@item.Id"><i class="fas fa-pen"></i> Edit</a>
                            <a class="btn btn-danger" asp-action="Delete" asp-route-id="@item.Id"><i class="fas fa-trash-alt"></i> Delete</a>
                        }
                        <a class="btn btn-primary" asp-controller="cart" asp-action="buying" asp-route-id="@item.Id"><i class="fas fa-shopping-bag"></i> Buy Now</a>
                    </td>
                </tr>

            }

        </tbody>
    </table>
    @{
        var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
        var nextDisabled = !Model.HasNextPage ? "disabled" : "";
    }

    <a asp-action="Index" asp-route-sortOrder="@ViewData["CurrentSort"]" asp-route-pageNumber="@(Model.PageIndex - 1)" asp-route-currentFilter="@ViewData["CurrentFilter"]" class="btn btn-info @prevDisabled "> <i class="fas fa-chevron-left"></i> </a>
    <a asp-action="Index" asp-route-sortOrder="@ViewData["CurrentSort"]" asp-route-pageNumber="@(Model.PageIndex + 1)" asp-route-currentFilter="@ViewData["CurrentFilter"]" class="btn btn-info @nextDisabled"><i class="fas fa-chevron-right"></i></a>
    <br />
    <br />
</div>
<div class="lds-ripple-wrapper">
    <div class="lds-ripple"><div></div><div></div></div>
</div>